#!/bin/bash
# This command allows to build ".so" files corresponding to any formula
# chmod 700 compile
# examples :
# - To build for the function f(x,y,u,v,b) = <u,v>^2*exp(-oos2*|x-y|^2)*b :
# 		./compile "Scal<Square<Scalprod<X<2,4>,Y<3,4>>>,GaussKernel<P<0>,X<0,3>,Y<1,3>,Y<4,3>>>"
# - To build for the gradient of the same function wrt x :
# 		./compile "Grad<Scal<Square<Scalprod<X<2,4>,Y<3,4>>>,GaussKernel<P<0>,X<0,3>,Y<1,3>,Y<4,3>>>,X<0,3>,X<5,3>>"

type=${4:-float}
#(cat core/link_autodiff_a.cu; printf "$2" ; printf "\n#define FORMULA $1\n" ; cat core/link_autodiff_b.cu)
(cat core/link_autodiff_a.cu; printf "$2" ; printf "\n#define FORMULA $1\n" ; cat core/link_autodiff_b.cu) | nvcc -O2 -x cu -D_FORCE_INLINES -D __TYPE__=$type -std=c++11 -Xcompiler -fPIC -shared -o /dev/stdout -I $PWD - > "build/$3"
