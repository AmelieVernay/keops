% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazytensor_operations.R
\name{grad}
\alias{grad}
\title{Symbolic gradient operation.}
\usage{
grad(x, gradin, opstr, index)
}
\arguments{
\item{x}{A \code{LazyTensor} or a \code{ComplexLazyTensor}.}

\item{gradin}{A \code{LazyTensor}, a \code{ComplexLazyTensor} encodimg a matrix of ones
with an inner dimension equal to 1 and with number of rows equal to
the number of rows of the first \code{x} variable (in \code{x$vars}).}

\item{opstr}{A \code{string} formula corresponding to a reduction
(like "Sum" or "Max").}

\item{index}{A \code{character} that should be either \strong{i} or \strong{j} to specify
whether if the reduction is indexed by \strong{i} (rows), or \strong{j} (columns).}
}
\value{
A \code{LazyTensor} or a \code{ComplexLazyTensor}.
}
\description{
Symbolic gradient operation - a binary operation.
}
\details{
\code{grad(x, v, gradin)} returns a \code{LazyTensor} which encodes,
symbolically, the gradient (more precisely, the adjoint of the differential
operator) of \code{x}, with respect to variable \code{v}, and applied to \code{gradin}.
}
\examples{
\dontrun{
nx <- 100
ny <- 150
x <- matrix(runif(nx*3), nrow=nx, ncol=3)     # matrix 100 x 3
y <- matrix(runif(ny*3), nrow=ny, ncol=3)     # matrix 150 x 3
eta <- matrix(runif(nx*1), nrow=nx, ncol=1)   # matrix 100 x 1 
# nrow(x) == nrow(eta)

x_i <- LazyTensor(x, index = 'i')
y_j <- LazyTensor(y, index = 'j')
eta_i <- LazyTensor(eta, index = 'i')

# gradient with the formula : 
# Grad(Sum_Reduction(SqNorm2(x_i-y_j), 0), x_i, eta_i)
grad_xy <- grad(sqnorm2(x_i-y_j), eta_i, "Sum", "j")     
}
}
\author{
Chloe Serre-Combe, Amelie Vernay
}
