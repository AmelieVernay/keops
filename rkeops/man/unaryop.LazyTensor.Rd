% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rkeops_lazytensor_operations.R
\name{unaryop.LazyTensor}
\alias{unaryop.LazyTensor}
\title{Build a unary operation}
\usage{
unaryop.LazyTensor(
  x,
  opstr,
  opt_arg = NA,
  opt_arg2 = NA,
  res_type = "LazyTensor"
)
}
\arguments{
\item{x}{A \code{LazyTensor}, a \code{ComplexLazyTensor}, a vector of numeric values, or a scalar value.}

\item{opstr}{A text string corresponding to an operation.}

\item{opt_arg}{An optional argument which can be a scalar value.}

\item{opt_arg2}{An optional argument which can be a scalar value.}

\item{res_type}{A character string among "LazyTensor" (default) and "ComplexLazyTensor",
depending on the class we want the result to be of.
(Useful especially when dealing with complex-to-real or real-to-complex functions)}
}
\value{
An object of class "LazyTensor" or "ComplexLazyTensor".
}
\description{
Symbolically applies \strong{opstr} operation to \strong{x}.
}
\examples{
\dontrun{
x <- matrix(runif(150 * 3), 150, 3) # arbitrary R matrix, 150 rows and 3 columns
x_i <- LazyTensor(x, index = 'i')   # creating LazyTensor from matrix x, indexed by 'i'
una_x <- unaryop.LazyTensor(x_i, "Minus")   # symbolic matrix

una2_x <- unaryop.LazyTensor(x_i, "Pow", opt_arg = 3)  # symbolic matrix
}
}
\author{
Chloe Serre-Combe, Amelie Vernay
}
