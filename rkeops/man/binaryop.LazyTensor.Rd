% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rkeops_lazytensor_operations.R
\name{binaryop.LazyTensor}
\alias{binaryop.LazyTensor}
\title{Build a binary operation}
\usage{
binaryop.LazyTensor(
  x,
  y,
  opstr,
  is_operator = FALSE,
  dim_check_type = "sameor1"
)
}
\arguments{
\item{x}{A LazyTensor, a vector of numeric values, or a scalar value.}

\item{y}{A LazyTensor, a vector of numeric values, or a scalar value.}

\item{opstr}{A text string corresponding to an operation.}

\item{is_operator}{A boolean used to specify if \strong{opstr} is an operator like \code{+}
, \code{-} or a "genuine" function.}

\item{dim_check_type}{A string to specify if, and how, we should check input dimensions.
Supported values are:
\itemize{
\item {\strong{"same"}:}{ \strong{x} and \strong{y} should have the same inner dimension;}
\item {\strong{"sameor1"} (default):}{ \strong{x} and \strong{y} should have the same inner dimension or
at least one of them should be of dimension 1;}
\item {\strong{NA}:}{ no dimension restriction.}
}}
}
\value{
An object of class "LazyTensor".
}
\description{
Symbolically applies \strong{opstr} operation to \strong{x} and \strong{y}.
}
\examples{
\dontrun{
x <- matrix(runif(150 * 3), 150, 3) # arbitrary R matrix, 150 rows and 3 columns
y <- matrix(runif(150 * 3), 150, 3) # arbitrary R matrix, 150 rows and 3 columns
x_i <- LazyTensor(x, index = 'i')   # creating LazyTensor from matrix x, indexed by 'i'
y_j <- LazyTensor(x, index = 'j')   # creating LazyTensor from matrix x, indexed by 'j'
bin_xy <- binaryop.LazyTensor(x_i, y_j, "+", is_operator = TRUE)   # symbolic matrix
}
}
\author{
Chloé Serre-Combe, Amélie Vernay
}
